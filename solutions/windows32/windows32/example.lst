Microsoft (R) Macro Assembler Version 14.38.33135.0	    02/27/24 19:32:28
example.asm						     Page 1 - 1


				; Explain what this program does
				; Author:  Your name
				; Date:    put the date

				.586
				.MODEL FLAT

				INCLUDE io.h                                                                    ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096

 00000000			.DATA
 00000000 00000000		lengthRec               DWORD   ?                                               ; variable to store number length   
 00000004 00000000		widthRec                DWORD   ?                                               ; variable to store number width    
 00000008 45 6E 74 65 72	prompt1                 BYTE    "Enter the length of the rectangle", 0          ; prompt for length
	   20 74 68 65 20
	   6C 65 6E 67 74
	   68 20 6F 66 20
	   74 68 65 20 72
	   65 63 74 61 6E
	   67 6C 65 00
 0000002A 45 6E 74 65 72	prompt2                 BYTE    "Enter the width of the rectangle", 0           ; prompt for width
	   20 74 68 65 20
	   77 69 64 74 68
	   20 6F 66 20 74
	   68 65 20 72 65
	   63 74 61 6E 67
	   6C 65 00
 0000004B  00000028 [		string                  BYTE    40 DUP (?)                                      ; buffer to store ASCII values
	    00
	   ]
 00000073 54 68 65 20 61	perimeterLbl            BYTE    "The area is", 0                                ; label for the result display
	   72 65 61 20 69
	   73 00
 0000007F  0000000B [		perimeter               DWORD    11 DUP (?), 0                                  ; result in ASCII
	    00000000
	   ] 00000000

 00000000			.CODE
 00000000			_MainProc PROC
				        input   prompt1, string, 40                                             ; read ASCII characters from prompt1
				        atod    string                                                          ; convert to integer
 0000002D  A3 00000000 R	        mov     lengthRec, eax                                                  ; store length in register

				        input   prompt2, string, 40                                             ; read ASCII characters from prompt2
				        atod    string                                                          ; convert to integer
 0000005F  A3 00000004 R	        mov     widthRec, eax                                                   ; store width in register

 00000064  A1 00000000 R	        mov     eax, lengthRec                                                  ; result =  length
 00000069  03 C0		        add     eax, eax                                                        ; result =  2*length
 0000006B  8B 1D 00000004 R	        mov     ebx, widthRec                                                   ; temp   =  (2*length)
 00000071  03 DB		        add     ebx, ebx                                                        ; result =  2*z
 00000073  03 C3		        add     eax, ebx                                                        ; result =  (2*length + 2*width)
 00000075  A3 0000007F R	        mov     perimeter, eax                                                  ; move result from eax to perimeter

				        dtoa    perimeter, eax                                                  ; convert result to ASCII
				        output  perimeterLbl, perimeter                                         ; output label and result

 000000AB  B8 00000000		        mov     eax, 0                                                          ; exit with return code 0
 000000B0  C3			        ret

 000000B1			_MainProc ENDP
				END                                                                             ; end of source code

Microsoft (R) Macro Assembler Version 14.38.33135.0	    02/27/24 19:32:28
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000AF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000B1 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000B1 Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
lengthRec  . . . . . . . . . . .	DWord	 00000000 _DATA	
perimeterLbl . . . . . . . . . .	Byte	 00000073 _DATA	
perimeter  . . . . . . . . . . .	DWord	 0000007F _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000008 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 0000002A _DATA	
string . . . . . . . . . . . . .	Byte	 0000004B _DATA	
widthRec . . . . . . . . . . . .	DWord	 00000004 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
